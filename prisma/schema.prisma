// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  fullName         String
  email            String    @unique
  phoneNumber      String    @unique
  password         String
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Course {
  id          String   @id @default(uuid())
  title       String
  description String
  thumbnail   String?
  category    String
  isPaid      Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  modules     Module[]
}

model Module {
  id          String   @id @default(uuid())
  title       String
  description String
  courseId    String
  course      Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  videos      Video[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Video {
  id        String   @id @default(uuid())
  title     String
  url       String
  duration  Int // Duration in seconds
  moduleId  String
  tags      String
  module    Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        String   @id @default(uuid())
  name      String
  email     String
  opinion   String
  createdAt DateTime @default(now())
}

model Quote {
  id        String   @id @default(uuid())
  quote     String
  author    String
  createdAt DateTime @default(now())
}
